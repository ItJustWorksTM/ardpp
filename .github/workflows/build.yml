name: Build
on: [push, pull_request]
jobs:
  build-linux:
    name: ardpp - Linux
    runs-on: ubuntu-latest
    container: ubuntu:bionic
    env:
      DEBIAN_FRONTEND: "noninteractive"
      CMAKE_VERSION: 3.21.0
      CC: gcc-11
      CXX: g++-11
    steps:
      - name: Get toolchain
        run: |
          apt-get update
          apt-get install -y software-properties-common wget ninja-build zlib1g-dev
          add-apt-repository -y ppa:ubuntu-toolchain-r/test
          apt-get install -y g++-11
      - name: Get CMake
        run: |
          wget -q https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION-linux-x86_64.sh
          chmod +x cmake-$CMAKE_VERSION-linux-x86_64.sh
          ./cmake-$CMAKE_VERSION-linux-x86_64.sh --skip-license --prefix=/usr/local
      - name: Cache LLVM
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: /opt/llvm_static
          key: ubuntu_bionic-llvm12.0
      - name: Install LLVM
        if: steps.cache-llvm.outputs.cache-hit != 'true'
        run: |
          apt-get install -y git make libtool-bin
          git clone --depth 1 https://github.com/deech/libclang-static-build
          cd libclang-static-build
          cmake -DCMAKE_INSTALL_PREFIX=/opt/llvm_static -S . -B build
          cmake --build ./build --target install
          cd ..
      - uses: actions/checkout@v2
      - name: Configure
        run: cmake -G Ninja -DARDPP_CXXRT_LINKING=STATIC -DSLIBCLANG_DIR=/opt/llvm_static -S . -B dist
      - name: Build
        run: cmake --build ./dist
      - name: Package
        run: (cd dist; cpack -G TGZ .)
      - name: Upload artifacts
        uses: 'actions/upload-artifact@v2'
        with:
          name: ardpp-linux
          path: dist/*.tar.gz
